name: Deploy to Cloud Run

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master  # Or another branch if preferred

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Build and Push Docker Image
        run: |
          gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-graphql-api:latest .

      - name: Output Image URL
        run: echo "::set-output name=image_url::gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-graphql-api:latest"

  terraform-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Plan
        env:
          TF_VAR_credentials: "$HOME/gcp_credentials.json"
          TF_VAR_image_url: ${{ needs.build-and-push.outputs.image_url }}
          TF_VAR_cosmos_db_endpoint: ${{ secrets.COSMOS_DB_ENDPOINT }}
          TF_VAR_cosmos_db_key: ${{ secrets.COSMOS_DB_KEY }}
          TF_VAR_DATABASE_ID: ${{ secrets.DATABASE_ID }}
          TF_EMPLOYEES_CONTAINER_ID: ${{ secrets.EMPLOYEES_CONTAINER_ID }}
          TF_SCHEDULES_CONTAINER_ID: ${{ secrets.SCHEDULES_CONTAINER_ID }}
          TF_PARTITION_KEY: ${{ secrets.PARTITION_KEY }}

        run: terraform plan -out=tfplan -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=${{ secrets.GCP_REGION }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

