name: Deploy to Cloud Run

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master  # Or another branch if preferred
  

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repo
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Set up Google Cloud SDK
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials: ${{ secrets.GCP_CREDENTIALS }}
        export_default_credentials: true

    # Install Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Configure GCP credentials
      run: echo "${{ secrets.GCP_CREDENTIALS }}" > $HOME/gcp_credentials.json
      
    # Terraform Init
    - name: Initialize Terraform
      run: terraform init

    # Terraform Plan
    - name: Terraform Plan
      run: terraform plan -out=tfplan -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=${{ secrets.GCP_REGION }}"

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan

  build-deploy:
    runs-on: ubuntu-latest
    needs: terraform-deploy

    steps:
    # Checkout the repo
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Set up Google Cloud SDK (for deploying Docker image)
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials: ${{ secrets.GCP_CREDENTIALS }}
        export_default_credentials: true

    # Build the Docker image
    - name: Build Docker image
      run: |
        gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-graphql-api

    # Deploy to Cloud Run
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy my-graphql-api \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-graphql-api \
          --platform managed \
          --region ${{ secrets.GCP_REGION }} \
          --allow-unauthenticated
