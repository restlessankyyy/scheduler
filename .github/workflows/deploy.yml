# .github/workflows/deploy.yml

name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials: ${{ secrets.GCP_CREDENTIALS }}
        export_default_credentials: true

    - name: Authenticate Docker with GCP
      run: gcloud auth configure-docker

    - name: Build, Authenticate, and Push
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-graphql-api:latest ./src/scheduler/code/app-api && \
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-graphql-api:latest

    - name: Output Image URL
      run: echo "::set-output name=image_url::gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-graphql-api:latest"

  terraform-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        credentials: ${{ secrets.GCP_CREDENTIALS }}
        export_default_credentials: true

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Initialize Terraform
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -out=tfplan -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=${{ secrets.GCP_REGION }}" -var="credentials=${{ secrets.GCP_CREDENTIALS }}"

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan