name: Deploy to Cloud Run

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master  # Or another branch if preferred

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Plan
        # Choose either variable file or environment variable method
        # Using a variable file:
        # run: terraform plan -out=tfplan -var-file=variables.tfvars -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=${{ secrets.GCP_REGION }}"
        # Using environment variables:
        env:
          TF_VAR_credentials: "$HOME/gcp_credentials.json"
        run: terraform plan -out=tfplan -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=${{ secrets.GCP_REGION }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  build-deploy:
    runs-on: ubuntu-latest
    needs: terraform-deploy

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          export_default_credentials: true

      - name: Build Docker image
        run: |
          gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-graphql-api

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy my-graphql-api \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-graphql-api \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated
