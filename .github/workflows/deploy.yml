name: Deploy to Cloud Run

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master 

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}

      - name: Authenticate with Google Cloud
        run: |
          printf '%s' "${{ secrets.GCP_CREDENTIALS }}" > $HOME/gcp_credentials.json
          gcloud auth activate-service-account --key-file=$HOME/gcp_credentials.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Build and Push with Google Cloud Build
        run: |
          gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-graphql-api:latest ./src/scheduler/code/app-api

      - name: Output Image URL
        run: echo "::set-output name=image_url::gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-graphql-api:latest"

  terraform-deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}

      - name: Authenticate with Google Cloud
        run: |
          printf '%s' "${{ secrets.GCP_CREDENTIALS }}" > $HOME/gcp_credentials.json
          gcloud auth activate-service-account --key-file=$HOME/gcp_credentials.json
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="region=${{ secrets.GCP_REGION }}" -var="credentials=$HOME/gcp_credentials.json"

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        